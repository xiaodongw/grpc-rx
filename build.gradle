plugins {
  id "com.google.osdetector" version "1.4.0"
  id "com.github.ben-manes.versions" version "0.17.0"
}

ext {
  def exeSuffix = osdetector.os == 'windows' ? ".exe" : ""
  protocPluginBaseName = 'protoc-gen-grpc-rx'
  rxjavaPluginPath = "$rootDir/grpc-rx-compiler/build/exe/$protocPluginBaseName$exeSuffix"

  grpcJavaVersion = '1.14.0'
  protobufVersion = '3.5.1'
  rxJavaVersion = '2.2.0'
}

subprojects {
  apply plugin: "checkstyle"
  apply plugin: "java"
  apply plugin: "maven"
  apply plugin: "idea"
  apply plugin: "signing"
  apply plugin: "jacoco"

  group = "io.atomos"
  version = "0.5.0"

  compileJava {
    sourceCompatibility = 1.7
    options.deprecation = true
  }

  compileTestJava {
    sourceCompatibility = 1.8
    options.deprecation = true
  }

  repositories {
    mavenCentral()
    mavenLocal()
  }

  signing {
    required false
    sign configurations.archives
  }

  // Disable JavaDoc doclint on Java 8. It's annoying.
  if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }

  checkstyle {
    configFile = file("$rootDir/checkstyle.xml")
    toolVersion = "6.17"
    ignoreFailures = false
    if (rootProject.hasProperty("checkstyle.ignoreFailures")) {
      ignoreFailures = rootProject.properties["checkstyle.ignoreFailures"].toBoolean()
    }
    configProperties["rootDir"] = rootDir
  }

  checkstyleMain {
    source = fileTree(dir: "src/main", include: "**/*.java")
  }

  checkstyleTest {
    source = fileTree(dir: "src/test", include: "**/*.java")
  }

  task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
  }

  task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives javadocJar, sourcesJar
  }

  uploadArchives.repositories.mavenDeployer {
    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
    String stagingUrl
    if (rootProject.hasProperty('repositoryId')) {
      stagingUrl = 'https://oss.sonatype.org/service/local/staging/deployByRepositoryId/' +
          rootProject.repositoryId
    } else {
      stagingUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    }
    def configureAuth = {
      if (rootProject.hasProperty('ossrhUsername') && rootProject.hasProperty('ossrhPassword')) {
        authentication(userName: rootProject.ossrhUsername, password: rootProject.ossrhPassword)
      }
    }
    repository(url: stagingUrl, configureAuth)
    snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/', configureAuth)

    pom.project {
      name "grpc-rx"
      description 'GRPC stub & compiler for RxJava2'
      url 'https://github.com/xiaodongw/grpc-rx'

      scm {
        url 'https://github.com/xiaodongw/grpc-rx.git'
      }

      licenses {
        license {
          name 'The Apache License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
      }

      developers {
        developer {
          id 'xiaodongw'
          name 'Xiaodong Wang'
          email 'xiaodongw79@gmail.com'
        }
      }
    }
  }

  test {
    testLogging {
      exceptionFormat = 'full'
      showExceptions true
      showCauses true
      showStackTraces true
    }
    maxHeapSize = '1500m'
  }
}
